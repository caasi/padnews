// Generated by LiveScript 1.2.0
var request, split, deepDiff, Padnews;
request = require('request');
split = require('split');
deepDiff = require('deep-diff');
Padnews = (function(){
  Padnews.displayName = 'Padnews';
  var prototype = Padnews.prototype, constructor = Padnews;
  function Padnews(id, domain){
    this.id = id;
    this.domain = domain;
    this.domain = this.domain ? domain + "." : '';
    this.news = [];
  }
  prototype.get = function(cb){
    var last, result;
    result = [];
    request.get("https://" + this.domain + "hackpad.com/ep/pad/static/" + this.id).pipe(split(/(<\/p>|<p>)/)).on('data', function(it){
      var news;
      news = /\s*(\d?\d:\S\S)\s*(?:\[\s*(.+)\s*\])?\s*(.+)\s*/.exec(it);
      if (news) {
        last = {
          time: news[1],
          location: news[2] || '',
          content: [news[3]]
        };
        result.push(last);
      } else if (it.length && !/(\r?\n|^<.*>$)/.test(it)) {
        if (last != null) {
          last.content.push(it);
        }
      }
    }).on('end', function(){
      if (typeof cb === 'function') {
        cb(result.reverse());
      }
    });
  };
  prototype.run = function(delay, onMsg){
    var updateNews, updateLoop, this$ = this;
    updateNews = function(news){
      var i, current, prev, ds;
      if (this$.news.length) {
        for (i in news) {
          current = news[i];
          prev = this$.news[i];
          if (prev) {
            ds = deepDiff.diff(current, prev);
            if (!ds) {
              continue;
            }
            if (onMsg != null) {
              onMsg.call(this$, 'update', current, i, ds);
            }
          } else {
            if (onMsg != null) {
              onMsg.call(this$, 'create', current, i);
            }
          }
        }
        return this$.news = news;
      } else if (news.length) {
        this$.news = news;
        return onMsg != null ? onMsg.call(this$, 'ready') : void 8;
      }
    };
    (updateLoop = function(){
      this$.get(updateNews);
      return setTimeout(updateLoop, delay);
    })();
  };
  return Padnews;
}());
module.exports = Padnews;